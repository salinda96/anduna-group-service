# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: MVN build
      run: mvn -B package --file pom.xml
    - name: Build with Maven jar
      run: mvn clean package spring-boot:repackage
    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_UN }}
        password: ${{ secrets.DOCKER_PW}}
        repository: smenaka1104/anduna-group-api
        tags: latest
 
    - name: STOP all containers
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: docker stop $(docker ps -aq)
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey: ${{ secrets.PKEY }}

    - name: REMOVE all containers
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: docker rm $(docker ps -aq)
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey: ${{ secrets.PKEY }}

    - name: RUN Container
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: docker run -d -p 8080:8080 smenaka1104/anduna-group-api:latest
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey: ${{ secrets.PKEY }}
